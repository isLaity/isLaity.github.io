<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://isLaity.github.io</id>
    <title>Laity</title>
    <updated>2022-02-04T12:12:10.268Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://isLaity.github.io"/>
    <link rel="self" href="https://isLaity.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://isLaity.github.io/images/avatar.png</logo>
    <icon>https://isLaity.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Laity</rights>
    <entry>
        <title type="html"><![CDATA[“使用Hexo+阿里云服务器搭建个人博客”]]></title>
        <id>https://isLaity.github.io/“使用Hexo+阿里云服务器搭建个人博客”/</id>
        <link href="https://isLaity.github.io/“使用Hexo+阿里云服务器搭建个人博客”/">
        </link>
        <updated>2020-09-27T07:21:51.000Z</updated>
        <summary type="html"><![CDATA[<p>​		本篇文章是使用Hexo+云服务器搭建的，所以你需要拥有以下几点：</p>
<ol>
<li>
<p>自己的一个服务器</p>
</li>
<li>
<p>一个已经备案完成的域名</p>
<p>​		如果你没有服务器，又不想买一个，你可以使用Hexo+GitHub来搭建自己的博客，使用GitHub搭建只需要你准备一个备案完成的域名就可以了，等以后小编有时间，在写一篇基于Hexo+GitHub搭建的教程。</p>
</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<p>​		本篇文章是使用Hexo+云服务器搭建的，所以你需要拥有以下几点：</p>
<ol>
<li>
<p>自己的一个服务器</p>
</li>
<li>
<p>一个已经备案完成的域名</p>
<p>​		如果你没有服务器，又不想买一个，你可以使用Hexo+GitHub来搭建自己的博客，使用GitHub搭建只需要你准备一个备案完成的域名就可以了，等以后小编有时间，在写一篇基于Hexo+GitHub搭建的教程。</p>
</li>
</ol>
<!--more-->
<h1 id="搭建主要步骤">搭建主要步骤：</h1>
<ol>
<li>本地配置(Mac)</li>
<li>服务器的环境搭建</li>
<li>本地Hexo发布到云服务器</li>
</ol>
<h1 id="本地配置mac">本地配置(Mac)</h1>
<h2 id="git-的安装">git 的安装</h2>
<h3 id="1这里我是使用homebrew-安装的git">1.这里我是使用homebrew 安装的git</h3>
<ol>
<li>
<p>如果没有安装homebrew，则需要先安装homebrew</p>
<p>终端输入：</p>
<pre><code class="language-javascript">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;
</code></pre>
<p>如果命令执行不了，可能是权限的问题，先执行下<code>sudo su</code>在使用上面的命令</p>
</li>
<li>
<p>然后安装git：  <code>brew install git</code></p>
</li>
<li>
<p>使用： <code>git --version</code> 查看有没有安装成功，出现git的版本号证明安装成功</p>
</li>
</ol>
<h3 id="2-git-的配置">2. git 的配置</h3>
<ol>
<li>
<p>设置你自己的username 和 email</p>
<pre><code class="language-javascript">git config --global user.name&quot;username&quot; 
git config --global user.email&quot;email&quot;
#把这里的username和email换成你自己的
</code></pre>
</li>
<li>
<p>创建ssh key</p>
<pre><code class="language-javascript">ssh-keygen -t rsa -C &quot;email&quot;  #这里的email换成你自己的
</code></pre>
<p>这里会让你选择选择 y 然后一直点击键盘的 ENTER 与就是回车键选择默认就行了</p>
<pre><code class="language-javascript">#查看有没有创建成功，(如果进不去可能是没有创建成功，重新输入上面的命令在试一次)
cd ~/.ssh
#简单的看一下里面的文件
ls 
#查看id_rsa.pud文件，然后复制id_rsa.pud里面的内容
cat id_rsa.pud

</code></pre>
</li>
<li>
<p>登陆GitHub官网，进入Setting 找到 SSH Keys 将刚才复制的内容添加进去</p>
</li>
</ol>
<h2 id="hexo-的安装">Hexo 的安装</h2>
<h1 id="服务器环境的配置">服务器环境的配置</h1>
<h2 id="git和nginx的安装">git和nginx的安装</h2>
<h3 id="git的安装">git的安装</h3>
<p><code>yum install git</code></p>
<h3 id="nginx-的安装">Nginx 的安装</h3>
<p><code>yum install nginx</code></p>
<h2 id="git的配置">git的配置</h2>
<h3 id="1-在服务器上添加一个git用户">1. 在服务器上添加一个git用户</h3>
<pre><code class="language-javascript">useradd git
passwd git
</code></pre>
<h3 id="2-给git用户添加权限">2. 给git用户添加权限</h3>
<pre><code class="language-javascript">#给git添加权限
chmod 740 /etc/sudoers
vim /etc/sudoers
#在里面找到 root  ALL=(ALL)  ALL  在它的下方加一行
git  ALL=(ALL)  ALL

---
chmod 400 /etc/sudores
</code></pre>
<h3 id="3-给git用户添加ssh密钥">3. 给git用户添加ssh密钥</h3>
<pre><code class="language-javascript">su - git
mkdir -p ~/.ssh
touch ~/.ssh/authorized_keys
#添加权限
chmod 600 ~/.ssh/authorized_keys
chmod 700 ~/.ssh
#将自己本地的ssh密钥粘贴进去
vim ~/.ssh/authorized_keys
</code></pre>
<h3 id="4-创建git仓库并使用git-hooks-实现自动部署">4. 创建git仓库并使用git-hooks 实现自动部署</h3>
<pre><code class="language-javascript"> #新建目录(目录名字可以自己设置)，这是git仓库的位置
sudo mkdir -p /var/repo   
sudo mkdir pp /var/www/hexo #这里用来存放本地Hexo生成的静态文件
 #进入git仓库的文件夹
cd /var/repo 
#创建一个名叫blog的仓库
sudo git init --bare blog.git 
创建post-update文件并编辑
sudo vim /var/repo/blog.git/hooks/post-update

#post-update的内容如下(---是分割线不需要写入post-update文件里面，如果你改了目录名字，这里就把目录名字换成你自己的)
 ---
   #!/bin/bash
git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f
---

# 给post-update添加权限
cd /var/repo/blog.git/hooks/
sudo chown -R git:git /var/repo/
sudo chown -R git:git /var/www/hexo
#赋予其可执行权限
sudo chmod +x post-update  
</code></pre>
<h2 id="nginx的配置">nginx的配置</h2>
<pre><code class="language-javascript">#进入Nginx的目录里面
cd /etc/nginx/
#更改nginx.conf文件
vim nginx.conf

#nginx.conf文件更改如下（---是分割线，不需要写入nginx.conf文件里面）
---
server {
    listen    80 default_server;
    listen    [::]:80 default_server;
    server_name  localhost ip www.mrsiluofu.cn;#这里ip改成你自己服务器的ip地址 ，后面的www.mrsiluofu.cn改成你自己的域名
    root    /var/www/hexo  #这里是主要更改的位置，把目录改成你本地Hexo上传静态文件的目录
    
    ...
}
  
---
  
#检查nginx的文件是否有问题
nginx -t
#重启nginx（要想上面更改的文件生效，nginx需要重启）
nginx -s reload
</code></pre>
<h2 id="git用户修改默认shell环境">git用户修改默认shell环境</h2>
<pre><code class="language-javascript">#进入passwd修改
vim /etc/passwd
#找到git那一行，一般在最后一行，把目录/bin/bash 修改为 /usr/bin/git-shell，然后保存退出就行了
</code></pre>
<h1 id="本地环境的配置mac">本地环境的配置(Mac)</h1>
<h2 id="nodejs的安装">Node.js的安装</h2>
<p>这里也是使用的homebrew安装的 ：<code>brew install node</code></p>
<p>检查是否安装完成：<code>node -v</code></p>
<p>检查npm是否安装完成 ：<code>npm -v</code></p>
<p>这里如果出现版本号证明安装成功</p>
<h2 id="hexo的安装及配置">Hexo的安装及配置</h2>
<h2 id="hexo的安装">Hexo的安装</h2>
<p>这里使用node.js 安装Hexo：</p>
<p><code>sudo npm install -g hexo-cli</code></p>
<h2 id="hexo的配置">Hexo的配置</h2>
<h3 id="1-本地博客的初始化">1. 本地博客的初始化</h3>
<pre><code class="language-javascript">hexo init blog   #这里的blog目录可以自己更改名
cd blog
npm install
</code></pre>
<h3 id="2本地hexo的修改">2.本地Hexo的修改</h3>
<p>这里可以直接进入blog目录下，找到_config.yml文件，直接使用文本编辑器进行修改，下面是在终端里进行的修改操作</p>
<pre><code class="language-javascript">cd blog
vim _config.yml
#在_config.yml里面找到 deploy 配置部分进行修改：
deploy:
    type: git
    repo: root@ip:/var/repo/blog.git #这里的ip修改为自己的服务器ip地址
    branch: master

</code></pre>
<h3 id="3-本地hexo部署到服务器">3. 本地Hexo部署到服务器</h3>
<p>在本地终端里</p>
<pre><code class="language-javascript">cd blog #进入blog目录
hexo clean #清除缓存
hexo generate # 生成静态页面（这里可以简写成 hexo -g）
hexo delopy  # 将本地静态页面目录部署到云服务器（这里可以简写成 hexo -d）
</code></pre>
<h3 id="4测试访问">4.测试访问</h3>
<p>在浏览器里输入自己的域名查看就行了。</p>
]]></content>
    </entry>
</feed>